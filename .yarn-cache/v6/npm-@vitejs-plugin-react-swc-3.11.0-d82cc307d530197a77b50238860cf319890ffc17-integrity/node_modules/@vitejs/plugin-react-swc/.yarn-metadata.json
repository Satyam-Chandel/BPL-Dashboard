{
  "manifest": {
    "name": "@vitejs/plugin-react-swc",
    "version": "3.11.0",
    "license": "MIT",
    "author": {
      "name": "Arnaud Barré",
      "url": "https://github.com/ArnaudBarre"
    },
    "description": "Speed up your Vite dev server with SWC",
    "keywords": [
      "vite",
      "vite-plugin",
      "react",
      "swc",
      "react-refresh",
      "fast refresh"
    ],
    "type": "module",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vitejs/vite-plugin-react.git",
      "directory": "packages/plugin-react-swc"
    },
    "bugs": {
      "url": "https://github.com/vitejs/vite-plugin-react/issues"
    },
    "homepage": "https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react-swc#readme",
    "dependencies": {
      "@rolldown/pluginutils": "1.0.0-beta.27",
      "@swc/core": "^1.12.11"
    },
    "peerDependencies": {
      "vite": "^4 || ^5 || ^6 || ^7"
    },
    "main": "index.cjs",
    "types": "index.d.ts",
    "module": "index.js",
    "exports": {
      ".": {
        "require": "./index.cjs",
        "import": "./index.js"
      }
    },
    "_registry": "npm",
    "_loc": "/Users/schandel/Downloads/BPL Commander Project Management App (Copy)/.yarn-cache/v6/npm-@vitejs-plugin-react-swc-3.11.0-d82cc307d530197a77b50238860cf319890ffc17-integrity/node_modules/@vitejs/plugin-react-swc/package.json",
    "readmeFilename": "README.md",
    "readme": "# @vitejs/plugin-react-swc [![npm](https://img.shields.io/npm/v/@vitejs/plugin-react-swc)](https://www.npmjs.com/package/@vitejs/plugin-react-swc)\n\nSpeed up your Vite dev server with [SWC](https://swc.rs/)\n\n- ✅ A fast Fast Refresh (~20x faster than Babel)\n- ✅ Enable [automatic JSX runtime](https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html)\n\n## Installation\n\n```sh\nnpm i -D @vitejs/plugin-react-swc\n```\n\n## Usage\n\n```ts\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react-swc'\n\nexport default defineConfig({\n  plugins: [react()],\n})\n```\n\n## Caveats\n\nThis plugin has limited options to enable good performances and be transpiler agnostic. Here is the list of non-configurable options that impact runtime behaviour:\n\n- [useDefineForClassFields](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#the-usedefineforclassfields-flag-and-the-declare-property-modifier) is always activated, as this matches the current ECMAScript spec\n- `jsx runtime` is always `automatic`\n- In development:\n  - esbuild is disabled, so the [esbuild configuration](https://vite.dev/config/shared-options.html#esbuild) has no effect\n  - `target` is ignored and defaults to `es2020` (see [`devTarget`](#devtarget))\n  - JS files are not transformed\n  - tsconfig is not resolved, so properties other than the ones listed above behaves like TS defaults\n\n## Options\n\n### jsxImportSource\n\nControl where the JSX factory is imported from.\n\n`@default` \"react\"\n\n```ts\nreact({ jsxImportSource: '@emotion/react' })\n```\n\n### tsDecorators\n\nEnable TypeScript decorators. Requires `experimentalDecorators` in tsconfig.\n\n`@default` false\n\n```ts\nreact({ tsDecorators: true })\n```\n\n### plugins\n\nUse SWC plugins. Enable SWC at build time.\n\n```ts\nreact({ plugins: [['@swc/plugin-styled-components', {}]] })\n```\n\n### devTarget\n\nSet the target for SWC in dev. This can avoid to down-transpile private class method for example.\n\nFor production target, see https://vite.dev/config/build-options.html#build-target.\n\n`@default` \"es2020\"\n\n```ts\nreact({ devTarget: 'es2022' })\n```\n\n### parserConfig\n\nOverride the default include list (.ts, .tsx, .mts, .jsx, .mdx).\n\nThis requires to redefine the config for any file you want to be included (ts, mdx, ...).\n\nIf you want to trigger fast refresh on compiled JS, use `jsx: true`. Exclusion of node_modules should be handled by the function if needed. Using this option to use JSX inside `.js` files is highly discouraged and can be removed in any future version.\n\n```ts\nreact({\n  parserConfig(id) {\n    if (id.endsWith('.res')) return { syntax: 'ecmascript', jsx: true }\n    if (id.endsWith('.ts')) return { syntax: 'typescript', tsx: false }\n  },\n})\n```\n\n### reactRefreshHost\n\nThe `reactRefreshHost` option is only necessary in a module federation context. It enables HMR to work between a remote & host application. In your remote Vite config, you would add your host origin:\n\n```js\nreact({ reactRefreshHost: 'http://localhost:3000' })\n```\n\nUnder the hood, this simply updates the React Fash Refresh runtime URL from `/@react-refresh` to `http://localhost:3000/@react-refresh` to ensure there is only one Refresh runtime across the whole application. Note that if you define `base` option in the host application, you need to include it in the option, like: `http://localhost:3000/{base}`.\n\n### useAtYourOwnRisk_mutateSwcOptions\n\nThe future of Vite is with OXC, and from the beginning this was a design choice to not exposed too many specialties from SWC so that Vite React users can move to another transformer later.\nAlso debugging why some specific version of decorators with some other unstable/legacy feature doesn't work is not fun, so we won't provide support for it, hence the name `useAtYourOwnRisk`.\n\n```ts\nreact({\n  useAtYourOwnRisk_mutateSwcOptions(options) {\n    options.jsc.parser.decorators = true\n    options.jsc.transform.decoratorVersion = '2022-03'\n  },\n})\n```\n\n### disableOxcRecommendation\n\nIf set, disables the recommendation to use `@vitejs/plugin-react-oxc` (which is shown when `rolldown-vite` is detected and neither `swc` plugins are used nor the `swc` options are mutated).\n\n```ts\nreact({ disableOxcRecommendation: true })\n```\n\n## Consistent components exports\n\nFor React refresh to work correctly, your file should only export React components. The best explanation I've read is the one from the [Gatsby docs](https://www.gatsbyjs.com/docs/reference/local-development/fast-refresh/#how-it-works).\n\nIf an incompatible change in exports is found, the module will be invalidated and HMR will propagate. To make it easier to export simple constants alongside your component, the module is only invalidated when their value changes.\n\nYou can catch mistakes and get more detailed warning with this [eslint rule](https://github.com/ArnaudBarre/eslint-plugin-react-refresh).\n",
    "licenseText": "MIT License\n\nCopyright (c) Arnaud Barré (https://github.com/ArnaudBarre)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@vitejs/plugin-react-swc/-/plugin-react-swc-3.11.0.tgz#d82cc307d530197a77b50238860cf319890ffc17",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@vitejs/plugin-react-swc/-/plugin-react-swc-3.11.0.tgz",
    "hash": "d82cc307d530197a77b50238860cf319890ffc17",
    "integrity": "sha512-YTJCGFdNMHCMfjODYtxRNVAYmTWQ1Lb8PulP/2/f/oEEtglw8oKxKIZmmRkyXrVrHfsKOaVkAc3NT9/dMutO5w==",
    "registry": "npm",
    "packageName": "@vitejs/plugin-react-swc",
    "cacheIntegrity": "sha512-YTJCGFdNMHCMfjODYtxRNVAYmTWQ1Lb8PulP/2/f/oEEtglw8oKxKIZmmRkyXrVrHfsKOaVkAc3NT9/dMutO5w== sha1-2CzDB9UwGXp3tQI4hgzzGYkP/Bc="
  },
  "registry": "npm",
  "hash": "d82cc307d530197a77b50238860cf319890ffc17"
}