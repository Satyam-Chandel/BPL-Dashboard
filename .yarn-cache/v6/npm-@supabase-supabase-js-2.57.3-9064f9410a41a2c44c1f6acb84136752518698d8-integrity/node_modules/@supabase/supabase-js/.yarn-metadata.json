{
  "manifest": {
    "name": "@supabase/supabase-js",
    "version": "2.57.3",
    "description": "Isomorphic Javascript client for Supabase",
    "keywords": [
      "javascript",
      "typescript",
      "supabase"
    ],
    "homepage": "https://github.com/supabase/supabase-js",
    "bugs": {
      "url": "https://github.com/supabase/supabase-js/issues"
    },
    "license": "MIT",
    "author": {
      "name": "Supabase"
    },
    "files": [
      "dist",
      "src"
    ],
    "main": "dist/main/index.js",
    "module": "dist/module/index.js",
    "types": "dist/module/index.d.ts",
    "sideEffects": false,
    "repository": {
      "type": "git",
      "url": "https://github.com/supabase/supabase-js.git"
    },
    "scripts": {
      "clean": "rimraf dist docs/v2",
      "format": "prettier --write \"{src,test}/**/*.ts\"",
      "build": "run-s clean format build:*",
      "build:main": "tsc -p tsconfig.json",
      "build:module": "tsc -p tsconfig.module.json",
      "build:umd": "webpack --env mode=production",
      "types-generate": "dts-gen -m '@supabase/supabase-js' -s",
      "test": "run-s test:types test:run",
      "test:all": "run-s test:types test:run test:integration test:integration:browser",
      "test:run": "jest --runInBand --detectOpenHandles",
      "test:unit": "jest --runInBand --detectOpenHandles test/unit",
      "test:coverage": "jest --runInBand --coverage --testPathIgnorePatterns=\"test/integration|test/deno\"",
      "test:integration": "jest --runInBand --detectOpenHandles test/integration.test.ts",
      "test:integration:browser": "deno test --allow-all test/integration.browser.test.ts",
      "test:edge-functions": "deno test --allow-all --no-check test/deno/edge-functions-integration.test.ts",
      "test:watch": "jest --watch --verbose false --silent false",
      "test:node:playwright": "cd test/integration/node-browser && npm install && cp ../../../dist/umd/supabase.js . && npm run test",
      "test:bun": "cd test/integration/bun && bun install && bun test",
      "test:types": "run-s build:module && tsd --files test/types/*.test-d.ts && jsr publish --dry-run",
      "docs": "typedoc --entryPoints src/index.ts --out docs/v2 --includes src/**/*.ts",
      "docs:json": "typedoc --entryPoints src/index.ts --includes src/**/*.ts --json docs/v2/spec.json --excludeExternals",
      "serve:coverage": "npm run test:coverage && serve test/coverage",
      "update:test-deps": "npm run build && npm pack && cp supabase-supabase-js-*.tgz test/integration/expo/supabase-supabase-js-0.0.0-automated.tgz && cp supabase-supabase-js-*.tgz test/integration/next/supabase-supabase-js-0.0.0-automated.tgz && cp supabase-supabase-js-*.tgz test/deno/supabase-supabase-js-0.0.0-automated.tgz && cp supabase-supabase-js-*.tgz test/integration/bun/supabase-supabase-js-0.0.0-automated.tgz && cd test/integration/expo && npm install && cd ../next && npm install --legacy-peer-deps && cd ../../deno && npm install && cd ../integration/bun && bun install",
      "update:test-deps:expo": "npm run build && npm pack && cp supabase-supabase-js-*.tgz test/integration/expo/supabase-supabase-js-0.0.0-automated.tgz && cd test/integration/expo && npm install",
      "update:test-deps:next": "npm run build && npm pack && cp supabase-supabase-js-*.tgz test/integration/next/supabase-supabase-js-0.0.0-automated.tgz && cd test/integration/next && npm install --legacy-peer-deps",
      "update:test-deps:deno": "npm run build && npm pack && cp supabase-supabase-js-*.tgz test/deno/supabase-supabase-js-0.0.0-automated.tgz && cd test/deno && npm install",
      "update:test-deps:bun": "npm run build && npm pack && cp supabase-supabase-js-*.tgz test/integration/bun/supabase-supabase-js-0.0.0-automated.tgz && cd test/integration/bun && bun install"
    },
    "dependencies": {
      "@supabase/auth-js": "2.71.1",
      "@supabase/functions-js": "2.4.5",
      "@supabase/node-fetch": "2.6.15",
      "@supabase/postgrest-js": "1.21.3",
      "@supabase/realtime-js": "2.15.5",
      "@supabase/storage-js": "^2.10.4"
    },
    "devDependencies": {
      "@sebbo2002/semantic-release-jsr": "^1.0.0",
      "@solana/wallet-standard-features": "^1.3.0",
      "@types/jest": "^29.2.5",
      "husky": "^4.3.8",
      "jest": "^29.3.1",
      "jsr": "^0.13.5",
      "npm-run-all": "^4.1.5",
      "prettier": "^2.5.1",
      "pretty-quick": "^3.1.3",
      "puppeteer": "^24.9.0",
      "rimraf": "^3.0.2",
      "semantic-release-plugin-update-version-in-files": "^1.1.0",
      "serve": "^14.2.1",
      "ts-jest": "^29.0.5",
      "ts-loader": "^8.0.11",
      "ts-node": "^10.9.1",
      "tsd": "^0.30.4",
      "typedoc": "^0.22.16",
      "typescript": "^4.5.5",
      "webpack": "^5.69.1",
      "webpack-cli": "^4.9.2"
    },
    "husky": {
      "hooks": {
        "pre-commit": "pretty-quick --staged"
      }
    },
    "jsdelivr": "dist/umd/supabase.js",
    "unpkg": "dist/umd/supabase.js",
    "_registry": "npm",
    "_loc": "/Users/schandel/Downloads/BPL Commander Project Management App (Copy)/.yarn-cache/v6/npm-@supabase-supabase-js-2.57.3-9064f9410a41a2c44c1f6acb84136752518698d8-integrity/node_modules/@supabase/supabase-js/package.json",
    "readmeFilename": "README.md",
    "readme": "# `supabase-js` - Isomorphic JavaScript Client for Supabase.\n\n- **Documentation:** https://supabase.com/docs/reference/javascript/start\n- TypeDoc: https://supabase.github.io/supabase-js/v2/\n\n<div align=\"center\">\n\n[![pkg.pr.new](https://pkg.pr.new/badge/supabase/supabase-js)](https://pkg.pr.new/~/supabase/supabase-js)\n\n</div>\n\n## Usage\n\nFirst of all, you need to install the library:\n\n```sh\nnpm install @supabase/supabase-js\n```\n\nThen you're able to import the library and establish the connection with the database:\n\n```js\nimport { createClient } from '@supabase/supabase-js'\n\n// Create a single supabase client for interacting with your database\nconst supabase = createClient('https://xyzcompany.supabase.co', 'public-anon-key')\n```\n\n### UMD\n\nYou can use plain `<script>`s to import supabase-js from CDNs, like:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2\"></script>\n```\n\nor even:\n\n```html\n<script src=\"https://unpkg.com/@supabase/supabase-js@2\"></script>\n```\n\nThen you can use it from a global `supabase` variable:\n\n```html\n<script>\n  const { createClient } = supabase\n  const _supabase = createClient('https://xyzcompany.supabase.co', 'public-anon-key')\n\n  console.log('Supabase Instance: ', _supabase)\n  // ...\n</script>\n```\n\n### ESM\n\nYou can use `<script type=\"module\">` to import supabase-js from CDNs, like:\n\n```html\n<script type=\"module\">\n  import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm'\n  const supabase = createClient('https://xyzcompany.supabase.co', 'public-anon-key')\n\n  console.log('Supabase Instance: ', supabase)\n  // ...\n</script>\n```\n\n### Deno\n\nYou can use supabase-js in the Deno runtime via [JSR](https://jsr.io/@supabase/supabase-js):\n\n```js\nimport { createClient } from 'jsr:@supabase/supabase-js@2'\n```\n\n### Custom `fetch` implementation\n\n`supabase-js` uses the [`cross-fetch`](https://www.npmjs.com/package/cross-fetch) library to make HTTP requests, but an alternative `fetch` implementation can be provided as an option. This is most useful in environments where `cross-fetch` is not compatible, for instance Cloudflare Workers:\n\n```js\nimport { createClient } from '@supabase/supabase-js'\n\n// Provide a custom `fetch` implementation as an option\nconst supabase = createClient('https://xyzcompany.supabase.co', 'public-anon-key', {\n  global: {\n    fetch: (...args) => fetch(...args),\n  },\n})\n```\n\n## Support Policy\n\nThis section outlines the scope of support for various runtime environments in Supabase JavaScript client.\n\n### Node.js\n\nWe only support Node.js versions that are in **Active LTS** or **Maintenance** status as defined by the [official Node.js release schedule](https://nodejs.org/en/about/previous-releases#release-schedule). This means we support versions that are currently receiving long-term support and critical bug fixes.\n\nWhen a Node.js version reaches end-of-life and is no longer in Active LTS or Maintenance status, Supabase will drop it in a **minor release**, and **this won't be considered a breaking change**.\n\n### Deno\n\nWe support Deno versions that are currently receiving active development and security updates. We follow the [official Deno release schedule](https://docs.deno.com/runtime/fundamentals/stability_and_releases/) and only support versions from the `stable` and `lts` release channels.\n\nWhen a Deno version reaches end-of-life and is no longer receiving security updates, Supabase will drop it in a **minor release**, and **this won't be considered a breaking change**.\n\n### Important Notes\n\n- **Experimental features**: Features marked as experimental may be removed or changed without notice\n\n## Testing\n\n### Unit Testing\n\n```bash\nnpm test\n```\n\n### Integration Testing\n\n```bash\nsupabase start\nnpm run test:integration\n```\n\n### Expo Testing\n\nThe project includes Expo integration tests to ensure compatibility with React Native environments.\n\n### Next.js Testing\n\nThe project includes Next.js integration tests to ensure compatibility with React SSR environments.\n\n### Deno Testing\n\nThe project includes Deno integration tests to ensure compatibility with Deno runtime.\n\n### Bun Testing\n\nThe project includes Bun integration tests to ensure compatibility with Bun runtime.\n\n#### CI/CD Testing\n\nWhen running on CI, the tests automatically use the latest dependencies from the root project. The CI pipeline:\n\n1. Builds the main project with current dependencies\n2. Creates a package archive (`.tgz`) with the latest versions\n3. Uses this archive in Expo, Next.js, and Deno tests to ensure consistency\n\n#### Local Development\n\nFor local development of Expo, Next.js, and Deno tests, you can update dependencies using automated scripts:\n\n```bash\n# Update all test dependencies at once\nnpm run update:test-deps\n\n# Or update specific test environments:\nnpm run update:test-deps:expo    # Expo tests only\nnpm run update:test-deps:next    # Next.js tests only\nnpm run update:test-deps:deno    # Deno tests only\nnpm run update:test-deps:bun     # Bun tests only\n```\n\n**Note:** The CI automatically handles dependency synchronization, so manual updates are only needed for local development and testing.\n\n## Badges\n\n[![Coverage Status](https://coveralls.io/repos/github/supabase/supabase-js/badge.svg?branch=master)](https://coveralls.io/github/supabase/supabase-js?branch=master)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Supabase\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.57.3.tgz#9064f9410a41a2c44c1f6acb84136752518698d8",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.57.3.tgz",
    "hash": "9064f9410a41a2c44c1f6acb84136752518698d8",
    "integrity": "sha512-gROsjAJ9ckeBpsLyMwK9plaZjw1uhlGgKp2EEQRJryPmI0jpKoGc07rvZ7KF8nk7H8UCwvUeYl68Fiw6M13tNg==",
    "registry": "npm",
    "packageName": "@supabase/supabase-js",
    "cacheIntegrity": "sha512-gROsjAJ9ckeBpsLyMwK9plaZjw1uhlGgKp2EEQRJryPmI0jpKoGc07rvZ7KF8nk7H8UCwvUeYl68Fiw6M13tNg== sha1-kGT5QQpBosRMH2rLhBNnUlGGmNg="
  },
  "registry": "npm",
  "hash": "9064f9410a41a2c44c1f6acb84136752518698d8"
}