{
  "manifest": {
    "name": "@vitejs/plugin-react",
    "version": "4.7.0",
    "license": "MIT",
    "author": {
      "name": "Evan You"
    },
    "description": "The default Vite plugin for React projects",
    "keywords": [
      "vite",
      "vite-plugin",
      "react",
      "babel",
      "react-refresh",
      "fast refresh"
    ],
    "contributors": [
      {
        "name": "Alec Larson"
      },
      {
        "name": "Arnaud BarrÃ©"
      }
    ],
    "files": [
      "dist"
    ],
    "type": "module",
    "main": "./dist/index.cjs",
    "module": "./dist/index.js",
    "types": "./dist/index.d.ts",
    "exports": {
      ".": {
        "import": "./dist/index.js",
        "require": "./dist/index.cjs"
      }
    },
    "scripts": {
      "dev": "tsdown --watch",
      "build": "tsdown",
      "prepublishOnly": "npm run build",
      "test-unit": "vitest run"
    },
    "engines": {
      "node": "^14.18.0 || >=16.0.0"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vitejs/vite-plugin-react.git",
      "directory": "packages/plugin-react"
    },
    "bugs": {
      "url": "https://github.com/vitejs/vite-plugin-react/issues"
    },
    "homepage": "https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react#readme",
    "dependencies": {
      "@babel/core": "^7.28.0",
      "@babel/plugin-transform-react-jsx-self": "^7.27.1",
      "@babel/plugin-transform-react-jsx-source": "^7.27.1",
      "@rolldown/pluginutils": "1.0.0-beta.27",
      "@types/babel__core": "^7.20.5",
      "react-refresh": "^0.17.0"
    },
    "peerDependencies": {
      "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"
    },
    "devDependencies": {
      "@vitejs/react-common": "workspace:*",
      "babel-plugin-react-compiler": "19.1.0-rc.2",
      "react": "^19.1.0",
      "react-dom": "^19.1.0",
      "rolldown": "1.0.0-beta.27",
      "tsdown": "^0.12.9",
      "vitest": "^3.2.4"
    },
    "_registry": "npm",
    "_loc": "/Users/schandel/Downloads/BPL Commander Project Management App (Copy)/.yarn-cache/v6/npm-@vitejs-plugin-react-4.7.0-647af4e7bb75ad3add578e762ad984b90f4a24b9-integrity/node_modules/@vitejs/plugin-react/package.json",
    "readmeFilename": "README.md",
    "readme": "# @vitejs/plugin-react [![npm](https://img.shields.io/npm/v/@vitejs/plugin-react.svg)](https://npmjs.com/package/@vitejs/plugin-react)\n\nThe default Vite plugin for React projects.\n\n- enable [Fast Refresh](https://www.npmjs.com/package/react-refresh) in development (requires react >= 16.9)\n- use the [automatic JSX runtime](https://legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html)\n- use custom Babel plugins/presets\n- small installation size\n\n```js\n// vite.config.js\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\nexport default defineConfig({\n  plugins: [react()],\n})\n```\n\n## Options\n\n### include/exclude\n\nIncludes `.js`, `.jsx`, `.ts` & `.tsx` by default. This option can be used to add fast refresh to `.mdx` files:\n\n```js\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport mdx from '@mdx-js/rollup'\n\nexport default defineConfig({\n  plugins: [\n    { enforce: 'pre', ...mdx() },\n    react({ include: /\\.(mdx|js|jsx|ts|tsx)$/ }),\n  ],\n})\n```\n\n> `node_modules` are never processed by this plugin (but esbuild will)\n\n### jsxImportSource\n\nControl where the JSX factory is imported from. Default to `'react'`\n\n```js\nreact({ jsxImportSource: '@emotion/react' })\n```\n\n### jsxRuntime\n\nBy default, the plugin uses the [automatic JSX runtime](https://legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html). However, if you encounter any issues, you may opt out using the `jsxRuntime` option.\n\n```js\nreact({ jsxRuntime: 'classic' })\n```\n\n### babel\n\nThe `babel` option lets you add plugins, presets, and [other configuration](https://babeljs.io/docs/en/options) to the Babel transformation performed on each included file.\n\n```js\nreact({\n  babel: {\n    presets: [...],\n    // Your plugins run before any built-in transform (eg: Fast Refresh)\n    plugins: [...],\n    // Use .babelrc files\n    babelrc: true,\n    // Use babel.config.js files\n    configFile: true,\n  }\n})\n```\n\nNote: When not using plugins, only esbuild is used for production builds, resulting in faster builds.\n\n#### Proposed syntax\n\nIf you are using ES syntax that are still in proposal status (e.g. class properties), you can selectively enable them with the `babel.parserOpts.plugins` option:\n\n```js\nreact({\n  babel: {\n    parserOpts: {\n      plugins: ['decorators-legacy'],\n    },\n  },\n})\n```\n\nThis option does not enable _code transformation_. That is handled by esbuild.\n\n**Note:** TypeScript syntax is handled automatically.\n\nHere's the [complete list of Babel parser plugins](https://babeljs.io/docs/en/babel-parser#ecmascript-proposalshttpsgithubcombabelproposals).\n\n### reactRefreshHost\n\nThe `reactRefreshHost` option is only necessary in a module federation context. It enables HMR to work between a remote & host application. In your remote Vite config, you would add your host origin:\n\n```js\nreact({ reactRefreshHost: 'http://localhost:3000' })\n```\n\nUnder the hood, this simply updates the React Fash Refresh runtime URL from `/@react-refresh` to `http://localhost:3000/@react-refresh` to ensure there is only one Refresh runtime across the whole application. Note that if you define `base` option in the host application, you need to include it in the option, like: `http://localhost:3000/{base}`.\n\n## Middleware mode\n\nIn [middleware mode](https://vite.dev/config/server-options.html#server-middlewaremode), you should make sure your entry `index.html` file is transformed by Vite. Here's an example for an Express server:\n\n```js\napp.get('/', async (req, res, next) => {\n  try {\n    let html = fs.readFileSync(path.resolve(root, 'index.html'), 'utf-8')\n\n    // Transform HTML using Vite plugins.\n    html = await viteServer.transformIndexHtml(req.url, html)\n\n    res.send(html)\n  } catch (e) {\n    return next(e)\n  }\n})\n```\n\nOtherwise, you'll probably get this error:\n\n```\nUncaught Error: @vitejs/plugin-react can't detect preamble. Something is wrong.\n```\n\n### disableOxcRecommendation\n\nIf set, disables the recommendation to use `@vitejs/plugin-react-oxc` (which is shown when `rolldown-vite` is detected and `babel` is not configured).\n\n## Consistent components exports\n\nFor React refresh to work correctly, your file should only export React components. You can find a good explanation in the [Gatsby docs](https://www.gatsbyjs.com/docs/reference/local-development/fast-refresh/#how-it-works).\n\nIf an incompatible change in exports is found, the module will be invalidated and HMR will propagate. To make it easier to export simple constants alongside your component, the module is only invalidated when their value changes.\n\nYou can catch mistakes and get more detailed warning with this [eslint rule](https://github.com/ArnaudBarre/eslint-plugin-react-refresh).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019-present, Yuxi (Evan) You and Vite contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz#647af4e7bb75ad3add578e762ad984b90f4a24b9",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz",
    "hash": "647af4e7bb75ad3add578e762ad984b90f4a24b9",
    "integrity": "sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA==",
    "registry": "npm",
    "packageName": "@vitejs/plugin-react",
    "cacheIntegrity": "sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA== sha1-ZHr057t1rTrdV452KtmEuQ9KJLk="
  },
  "registry": "npm",
  "hash": "647af4e7bb75ad3add578e762ad984b90f4a24b9"
}